const { exec } = require('child_process');
const path = require('path');

async function runScript(scriptPath) {
  return new Promise((resolve, reject) => {
    exec(`node ${scriptPath}`, (error, stdout, stderr) => {
      if (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ${scriptPath}:`, error.message);
        reject(error);
        return;
      }
      if (stderr) {
        console.error(`‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ ${scriptPath}:`, stderr);
      }
      console.log(stdout);
      resolve(stdout);
    });
  });
}

async function updateAllTests() {
  console.log('üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...\n');
  
  try {
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤...\n');
    
    console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∞...');
    await runScript('scripts/generate-new-math-test.js');
    console.log('‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ\n');
    
    console.log('2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∞...');
    await runScript('scripts/generate-new-advanced-math-test.js');
    console.log('‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ\n');
    
    console.log('3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∞...');
    await runScript('scripts/generate-new-physics-test.js');
    console.log('‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ\n');
    
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤...');
    await runScript('scripts/delete-old-tests.js');
    console.log('‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ\n');
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    console.log('\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:');
    console.log('‚Ä¢ –°–æ–∑–¥–∞–Ω—ã –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ LaTeX —Ñ–æ—Ä–º—É–ª–∞–º–∏');
    console.log('‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã —Å–ª–æ–∂–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è');
    console.log('‚Ä¢ –£–ª—É—á—à–µ–Ω—ã –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Å LaTeX —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º');
    console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Ç–µ—Å—Ç—ã');
    console.log('\nüîß –ù–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –≤–∫–ª—é—á–∞—é—Ç:');
    console.log('‚Ä¢ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞: 15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º–∏ —Ñ–æ—Ä–º—É–ª–∞–º–∏');
    console.log('‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞: 15 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤—ã—Å—à–µ–≥–æ —É—Ä–æ–≤–Ω—è');
    console.log('‚Ä¢ –§–∏–∑–∏–∫–∞: 15 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º—É–ª–∞–º–∏');
    
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error);
    process.exit(1);
  }
}

updateAllTests();
